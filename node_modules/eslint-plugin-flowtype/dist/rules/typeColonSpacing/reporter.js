'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _utilities = require('../../utilities');

var getSpaces = function getSpaces(direction, colon, context) {
  var sourceCode = context.getSourceCode();

  if (direction === 'before') {
    return colon.start - sourceCode.getTokenBefore(colon).end;
  } else {
    return sourceCode.getTokenAfter(colon).start - colon.end;
  }
};

exports.default = function (direction, context, _ref) {
  var always = _ref.always;

  return function (_ref2) {
    var colon = _ref2.colon,
        node = _ref2.node,
        _ref2$name = _ref2.name,
        name = _ref2$name === undefined ? '' : _ref2$name,
        _ref2$type = _ref2.type,
        type = _ref2$type === undefined ? 'type annotation' : _ref2$type;

    var spaces = getSpaces(direction, colon, context);
    var data = {
      direction: direction,
      name: name,
      type: type
    };

    if (always && spaces > 1) {
      context.report({
        data: data,
        fix: _utilities.spacingFixers.stripSpaces(direction, colon, spaces - 1),
        message: 'There must be 1 space {{direction}} {{name}}{{type}} colon.',
        node: node
      });
    } else if (always && spaces === 0) {
      context.report({
        data: data,
        fix: _utilities.spacingFixers.addSpace(direction, colon),
        message: 'There must be a space {{direction}} {{name}}{{type}} colon.',
        node: node
      });
    } else if (!always && spaces > 0) {
      context.report({
        data: data,
        fix: _utilities.spacingFixers.stripSpaces(direction, colon, spaces),
        message: 'There must be no space {{direction}} {{name}}{{type}} colon.',
        node: node
      });
    }
  };
};

module.exports = exports['default'];