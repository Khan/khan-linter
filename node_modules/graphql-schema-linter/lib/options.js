"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.loadOptionsFromConfigDir = loadOptionsFromConfigDir;

var _path = _interopRequireDefault(require("path"));

var _cosmiconfig = _interopRequireDefault(require("cosmiconfig"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function loadOptionsFromConfigDir(configDirectory) {
  const searchPath = configDirectory || './';
  const cosmic = (0, _cosmiconfig.default)('graphql-schema-linter', {
    cache: false
  }).searchSync(searchPath);

  if (cosmic) {
    let schemaPaths = [];
    let customRulePaths = []; // If schemaPaths come from cosmic, we resolve the given paths relative to the searchPath.

    if (cosmic.config.schemaPaths) {
      schemaPaths = cosmic.config.schemaPaths.map(schemaPath => _path.default.resolve(searchPath, schemaPath));
    } // If customRulePaths come from cosmic, we resolve the given paths relative to the searchPath.


    if (cosmic.config.customRulePaths) {
      customRulePaths = cosmic.config.customRulePaths.map(schemaPath => _path.default.resolve(searchPath, schemaPath));
    }

    return {
      rules: cosmic.config.rules,
      customRulePaths: customRulePaths || [],
      schemaPaths: schemaPaths
    };
  } else {
    return {};
  }
}