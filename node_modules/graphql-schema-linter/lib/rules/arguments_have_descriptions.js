"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ArgumentsHaveDescriptions = ArgumentsHaveDescriptions;

var _buildASTSchema = require("graphql/utilities/buildASTSchema");

var _validation_error = require("../validation_error");

function ArgumentsHaveDescriptions(configuration, context) {
  return {
    FieldDefinition(node) {
      const fieldName = node.name.value;

      for (const arg of node.arguments || []) {
        const description = (0, _buildASTSchema.getDescription)(arg, {
          commentDescriptions: configuration.getCommentDescriptions()
        });

        if (typeof description !== 'string' || description.length === 0) {
          const argName = arg.name.value;
          context.reportError(new _validation_error.ValidationError('arguments-have-descriptions', `The \`${argName}\` argument of \`${fieldName}\` is missing a description.`, [arg]));
        }
      }
    }

  };
}