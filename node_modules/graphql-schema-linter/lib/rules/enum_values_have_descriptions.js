'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EnumValuesHaveDescriptions = EnumValuesHaveDescriptions;

var _buildASTSchema = require('graphql/utilities/buildASTSchema');

var _validation_error = require('../validation_error');

function EnumValuesHaveDescriptions(configuration, context) {
  return {
    EnumValueDefinition: function EnumValueDefinition(node, key, parent, path, ancestors) {
      if ((0, _buildASTSchema.getDescription)(node, {
        commentDescriptions: configuration.getCommentDescriptions()
      })) {
        return;
      }

      var enumValue = node.name.value;
      var parentName = ancestors[ancestors.length - 1].name.value;

      context.reportError(new _validation_error.ValidationError('enum-values-have-descriptions', 'The enum value `' + parentName + '.' + enumValue + '`s description is missing.', [node]));
    }
  };
}