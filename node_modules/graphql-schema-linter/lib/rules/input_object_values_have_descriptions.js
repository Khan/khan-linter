"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InputObjectValuesHaveDescriptions = InputObjectValuesHaveDescriptions;

var _buildASTSchema = require("graphql/utilities/buildASTSchema");

var _validation_error = require("../validation_error");

function InputObjectValuesHaveDescriptions(configuration, context) {
  return {
    InputValueDefinition(node, key, parent, path, ancestors) {
      if ((0, _buildASTSchema.getDescription)(node, {
        commentDescriptions: configuration.getCommentDescriptions()
      })) {
        return;
      }

      const inputValueName = node.name.value;
      const parentNode = ancestors[ancestors.length - 1];

      if (parentNode.kind != 'InputObjectTypeDefinition') {
        return;
      }

      const inputObjectName = parentNode.name.value;
      context.reportError(new _validation_error.ValidationError('input-object-values-have-descriptions', `The input value \`${inputObjectName}.${inputValueName}\` is missing a description.`, [node]));
    }

  };
}